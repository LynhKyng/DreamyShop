// <auto-generated />
using System;
using DreamyShop.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DreamyShop.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(DreamyShopDbContext))]
    [Migration("20230415103725_InitDataBase")]
    partial class InitDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DreamyShop.Domain.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnique")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Attributes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03b9545d-09bd-4b83-808d-de2208e9d26a"),
                            Code = "COLOR",
                            DataType = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsUnique = true,
                            IsVisibility = true,
                            Name = "COLOR",
                            Note = "Product color",
                            SortOrder = 1,
                            StatusID = (byte)0
                        },
                        new
                        {
                            Id = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            Code = "SIZEText",
                            DataType = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsUnique = true,
                            IsVisibility = true,
                            Name = "SIZEText",
                            Note = "",
                            SortOrder = 2,
                            StatusID = (byte)0
                        },
                        new
                        {
                            Id = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            Code = "SIZEInt",
                            DataType = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsUnique = true,
                            IsVisibility = true,
                            Name = "SIZEInt",
                            Note = "",
                            SortOrder = 3,
                            StatusID = (byte)0
                        },
                        new
                        {
                            Id = new Guid("827ca5b7-0087-4256-bec0-399199a518d9"),
                            Code = "MATERIAL",
                            DataType = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsUnique = true,
                            IsVisibility = true,
                            Name = "MATERIAL",
                            Note = "",
                            SortOrder = 4,
                            StatusID = (byte)0
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("DreamyShop.Domain.InventoryTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("InventoryTickets");
                });

            modelBuilder.Entity("DreamyShop.Domain.InventoryTicketItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InventionTicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventionTicketId");

                    b.ToTable("InventoryTicketItems");
                });

            modelBuilder.Entity("DreamyShop.Domain.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57a5f678-43f0-4648-92d8-16bd09d7143e"),
                            Code = "SN",
                            Country = "Japan",
                            CoverPicture = "",
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Sony",
                            Slug = "sony"
                        },
                        new
                        {
                            Id = new Guid("41c2c299-ea5f-4c23-992d-e6f043f1b26f"),
                            Code = "GCCI",
                            Country = "Italy",
                            CoverPicture = "",
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Gucci",
                            Slug = "gucci"
                        },
                        new
                        {
                            Id = new Guid("80cad838-29c7-4a02-81c0-9ebe78a0a273"),
                            Code = "IPAPL",
                            Country = "US",
                            CoverPicture = "",
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Apple",
                            Slug = "apple"
                        },
                        new
                        {
                            Id = new Guid("b9be517b-72aa-46f1-9a98-a0b993cd2cf7"),
                            Code = "dell",
                            Country = "Texas-USA",
                            CoverPicture = "",
                            IsActive = true,
                            IsVisibility = true,
                            Name = "DELL",
                            Slug = "dell"
                        },
                        new
                        {
                            Id = new Guid("69d0372b-dbf5-4b70-9beb-0e4ea77f243a"),
                            Code = "asus",
                            Country = "Taiwan",
                            CoverPicture = "",
                            IsActive = true,
                            IsVisibility = true,
                            Name = "ASUS",
                            Slug = "asus"
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("SeoMetaDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.Property<string>("ThumbnailPicture")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1747cdf9-3acb-4001-8f52-ee7f387f8efb"),
                            CategoryId = new Guid("96bff1b2-3715-4f10-90d3-aaabb332e0e9"),
                            Code = "CMRSKS",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Security camera, surveillance camera, wireless camera, wifi camera, high resolution, motion sensor, remote monitoring",
                            ManufacturerId = new Guid("57a5f678-43f0-4648-92d8-16bd09d7143e"),
                            Name = "Camera-SKS",
                            ProductType = 1,
                            SeoMetaDescription = "Security camera, surveillance camera, wireless camera, wifi camera, high resolution, motion sensor, remote monitoring",
                            Slug = "camera-sks",
                            SortOrder = 1,
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("85f8b0c3-cb8d-4ccb-9544-19daad6ef352"),
                            CategoryId = new Guid("96bff1b2-3715-4f10-90d3-aaabb332e0e9"),
                            Code = "CMRUFG",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "XYZ wireless security camera with high resolution.",
                            ManufacturerId = new Guid("57a5f678-43f0-4648-92d8-16bd09d7143e"),
                            Name = "Camera-UFG",
                            ProductType = 1,
                            SeoMetaDescription = "XYZ wireless security camera with high resolution, built-in motion sensor, supports wifi connection, helps you observe your family, home, shop, office whenever and wherever.",
                            Slug = "camera-ufg",
                            SortOrder = 2,
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("30299235-6937-41b7-a76d-14584f5f856a"),
                            CategoryId = new Guid("efd560a8-c65b-439c-af43-765da733f3c1"),
                            Code = "IP14XSM",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            ManufacturerId = new Guid("80cad838-29c7-4a02-81c0-9ebe78a0a273"),
                            Name = "Iphone 14 XSMax",
                            ProductType = 2,
                            SeoMetaDescription = "Find out about Apple's latest line of iPhones at Apple Store Vietnam. Order online and get instant deals.",
                            Slug = "ip14-xsmax",
                            SortOrder = 3,
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("215e9dee-1d6c-40f4-9233-bb810509adaa"),
                            CategoryId = new Guid("2ed8e62d-2f2e-4957-ae81-8a07b0bcd443"),
                            Code = "DELLDEMON",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Buy genuine Laptop at our store with best quality and affordable price. We supply laptop products from reputable brands. Order now to get a free laptop backpack!",
                            ManufacturerId = new Guid("b9be517b-72aa-46f1-9a98-a0b993cd2cf7"),
                            Name = "Laptop DELL DEMON",
                            ProductType = 2,
                            SeoMetaDescription = "",
                            Slug = "dell-demon",
                            SortOrder = 4,
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            CategoryId = new Guid("7375fab5-4ff3-43d0-a707-a56062e161be"),
                            Code = "CLBGCCI",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            ManufacturerId = new Guid("41c2c299-ea5f-4c23-992d-e6f043f1b26f"),
                            Name = "Crocodile leather bag",
                            ProductType = 2,
                            SeoMetaDescription = "",
                            Slug = "clbcci",
                            SortOrder = 4,
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttribute", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductId", "AttributeId");

                    b.HasIndex("AttributeId");

                    b.ToTable("ProductAttributes");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            AttributeId = new Guid("03b9545d-09bd-4b83-808d-de2208e9d26a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusID = (byte)0
                        },
                        new
                        {
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusID = (byte)0
                        },
                        new
                        {
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            AttributeId = new Guid("827ca5b7-0087-4256-bec0-399199a518d9"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusID = (byte)0
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeDateTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Value")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeDateTimes");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeDecimal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeDecimals");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeInt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeInts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d44b2ac-0bd6-433b-9858-abb84d74ea2e"),
                            AttributeId = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = 35
                        },
                        new
                        {
                            Id = new Guid("3d369a2c-6bcb-468c-b296-64d96a84258a"),
                            AttributeId = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = 36
                        },
                        new
                        {
                            Id = new Guid("dfdbe11d-c978-4cc4-9a9e-cafc19805ac8"),
                            AttributeId = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = 37
                        },
                        new
                        {
                            Id = new Guid("6bb0a02b-d294-496a-b496-994d3dfaa6f2"),
                            AttributeId = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = 38
                        },
                        new
                        {
                            Id = new Guid("a2ee0ac5-663d-4d97-b449-ed8fe48fada3"),
                            AttributeId = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = 39
                        },
                        new
                        {
                            Id = new Guid("2c2fcf7c-fa5a-4b6f-ac30-48a2a6bdb4b5"),
                            AttributeId = new Guid("65a2fb41-f2c8-47c5-8e3d-ae4eb1913d08"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = 40
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeTexts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f3c7208-6bdf-44f4-b08e-1760cb559bce"),
                            AttributeId = new Guid("03b9545d-09bd-4b83-808d-de2208e9d26a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = "Red"
                        },
                        new
                        {
                            Id = new Guid("74e81a62-40c5-4d90-a9d9-fcafbe7ad2ed"),
                            AttributeId = new Guid("03b9545d-09bd-4b83-808d-de2208e9d26a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = "Black"
                        },
                        new
                        {
                            Id = new Guid("1b345d3e-67b2-4ab8-92ef-8790de816f7e"),
                            AttributeId = new Guid("03b9545d-09bd-4b83-808d-de2208e9d26a"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = "White"
                        },
                        new
                        {
                            Id = new Guid("f5a43aab-5e0e-4ee7-8497-ecf6e8571e23"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = "M"
                        },
                        new
                        {
                            Id = new Guid("0eeaacee-3129-4c64-bdf6-54d76a84b9f6"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = "L"
                        },
                        new
                        {
                            Id = new Guid("aa1d46b2-f2e8-4547-b36d-500d57029423"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Value = "XL"
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeVarchar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeVarchars");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CoverPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SeoMetaDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96bff1b2-3715-4f10-90d3-aaabb332e0e9"),
                            Code = "CMR",
                            CoverPicture = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Camera",
                            SeoMetaDescription = "",
                            Slug = "camera",
                            SortOrder = 1,
                            StatusID = (byte)0
                        },
                        new
                        {
                            Id = new Guid("efd560a8-c65b-439c-af43-765da733f3c1"),
                            Code = "IP",
                            CoverPicture = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Iphone",
                            SeoMetaDescription = "",
                            Slug = "iphone",
                            SortOrder = 2,
                            StatusID = (byte)0
                        },
                        new
                        {
                            Id = new Guid("2ed8e62d-2f2e-4957-ae81-8a07b0bcd443"),
                            Code = "LP",
                            CoverPicture = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Laptop",
                            SeoMetaDescription = "",
                            Slug = "laptop",
                            SortOrder = 3,
                            StatusID = (byte)0
                        },
                        new
                        {
                            Id = new Guid("7375fab5-4ff3-43d0-a707-a56062e161be"),
                            Code = "JLY",
                            CoverPicture = "",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsVisibility = true,
                            Name = "Jewelry",
                            SeoMetaDescription = "",
                            Slug = "jly",
                            SortOrder = 4,
                            StatusID = (byte)0
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductTag", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisibility")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.Property<string>("ThumbnailPicture")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc364f29-fcb9-44b7-8854-dfce09824c35"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsActive = true,
                            IsVisibility = true,
                            Price = 1200.0,
                            ProductId = new Guid("30299235-6937-41b7-a76d-14584f5f856a"),
                            Quantity = 12,
                            SKU = "IP14",
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("064357a3-f816-44b6-9b06-a58660f26763"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsActive = true,
                            IsVisibility = true,
                            Price = 1500.0,
                            ProductId = new Guid("85f8b0c3-cb8d-4ccb-9544-19daad6ef352"),
                            Quantity = 32,
                            SKU = "CAMERA",
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("0a134c80-0493-458a-9f02-16361f0df5c7"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsActive = true,
                            IsVisibility = true,
                            Price = 1250.0,
                            ProductId = new Guid("30299235-6937-41b7-a76d-14584f5f856a"),
                            Quantity = 20,
                            SKU = "IP14",
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        },
                        new
                        {
                            Id = new Guid("afd19304-3a45-4304-b2bb-1040f000c369"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsActive = true,
                            IsVisibility = true,
                            Price = 5000.0,
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            Quantity = 5,
                            SKU = "BAGGUCCI",
                            StatusID = (byte)0,
                            ThumbnailPicture = ""
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueDateTime", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProductAttributeDateTimeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductVariantId", "ProductId", "AttributeId", "ProductAttributeDateTimeId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductAttributeDateTimeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariantValueDateTimes");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueDecimal", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProductAttributeDecimalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductVariantId", "ProductId", "AttributeId", "ProductAttributeDecimalId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductAttributeDecimalId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariantValueDecimals");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueInt", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProductAttributeIntId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductVariantId", "ProductId", "AttributeId", "ProductAttributeIntId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductAttributeIntId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariantValueInts");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueText", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProductAttributeTextId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductVariantId", "ProductId", "AttributeId", "ProductAttributeTextId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductAttributeTextId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariantValueTexts");

                    b.HasData(
                        new
                        {
                            ProductVariantId = new Guid("afd19304-3a45-4304-b2bb-1040f000c369"),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            ProductAttributeTextId = new Guid("1b345d3e-67b2-4ab8-92ef-8790de816f7e"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusID = (byte)0
                        },
                        new
                        {
                            ProductVariantId = new Guid("afd19304-3a45-4304-b2bb-1040f000c369"),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            ProductAttributeTextId = new Guid("74e81a62-40c5-4d90-a9d9-fcafbe7ad2ed"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusID = (byte)0
                        },
                        new
                        {
                            ProductVariantId = new Guid("afd19304-3a45-4304-b2bb-1040f000c369"),
                            ProductId = new Guid("e914fd7b-9af8-403e-9f32-803346659264"),
                            AttributeId = new Guid("f9885dfb-02a8-4065-a4aa-18b29e48ee89"),
                            ProductAttributeTextId = new Guid("f5a43aab-5e0e-4ee7-8497-ecf6e8571e23"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusID = (byte)0
                        });
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueVarchar", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("ProductAttributeVarcharId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductVariantId", "ProductId", "AttributeId", "ProductAttributeVarcharId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductAttributeVarcharId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariantValueVarchars");
                });

            modelBuilder.Entity("DreamyShop.Domain.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LimitedUsageTimes")
                        .HasColumnType("bit");

                    b.Property<long>("MaximumDiscountAmount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("RequireUseCouponCode")
                        .HasColumnType("bit");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DreamyShop.Domain.PromotionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionCategories");
                });

            modelBuilder.Entity("DreamyShop.Domain.PromotionManufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ManufactureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionManufacturers");
                });

            modelBuilder.Entity("DreamyShop.Domain.PromotionProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionProducts");
                });

            modelBuilder.Entity("DreamyShop.Domain.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfileUrl")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<byte>("RoleType")
                        .HasColumnType("tinyint");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DreamyShop.Domain.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DreamyShop.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Country")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("GenderType")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("StatusID")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("StoredSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DreamyShop.Domain.InventoryTicket", b =>
                {
                    b.HasOne("DreamyShop.Domain.Inventory", "Inventory")
                        .WithMany("InventoryTickets")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("DreamyShop.Domain.InventoryTicketItem", b =>
                {
                    b.HasOne("DreamyShop.Domain.InventoryTicket", "InventoryTicket")
                        .WithMany("InventoryTicketItems")
                        .HasForeignKey("InventionTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryTicket");
                });

            modelBuilder.Entity("DreamyShop.Domain.Product", b =>
                {
                    b.HasOne("DreamyShop.Domain.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttribute", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeDateTime", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductAttributeDateTimes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductAttributeDateTimes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeDecimal", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductAttributeDecimals")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductAttributeDecimals")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeInt", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductAttributeInts")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductAttributeInts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeText", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductAttributeTexts")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductAttributeTexts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeVarchar", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductAttributeVarchars")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductAttributeVarchars")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductReview", b =>
                {
                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductTag", b =>
                {
                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariant", b =>
                {
                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueDateTime", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductVariantValueDateTimes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductAttributeDateTime", "ProductAttributeDateTime")
                        .WithMany("ProductVariantValueDateTimes")
                        .HasForeignKey("ProductAttributeDateTimeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductVariantValueDateTimes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantValueDateTimes")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");

                    b.Navigation("ProductAttributeDateTime");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueDecimal", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductVariantValueDecimals")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductAttributeDecimal", "ProductAttributeDecimal")
                        .WithMany("ProductVariantValueDecimals")
                        .HasForeignKey("ProductAttributeDecimalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductVariantValueDecimals")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantValueDecimals")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");

                    b.Navigation("ProductAttributeDecimal");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueInt", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductVariantValueInts")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductAttributeInt", "ProductAttributeInt")
                        .WithMany("ProductVariantValueInts")
                        .HasForeignKey("ProductAttributeIntId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductVariantValueInts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantValueInts")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");

                    b.Navigation("ProductAttributeInt");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueText", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductVariantValueTexts")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductAttributeText", "ProductAttributeText")
                        .WithMany("ProductVariantValueTexts")
                        .HasForeignKey("ProductAttributeTextId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductVariantValueTexts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantValueTexts")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");

                    b.Navigation("ProductAttributeText");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariantValueVarchar", b =>
                {
                    b.HasOne("DreamyShop.Domain.Attribute", "Attribute")
                        .WithMany("ProductVariantValueVarchars")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductAttributeVarchar", "ProductAttributeVarchar")
                        .WithMany("ProductVariantValueVarchars")
                        .HasForeignKey("ProductAttributeVarcharId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.Product", "Product")
                        .WithMany("ProductVariantValueVarchars")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DreamyShop.Domain.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantValueVarchars")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Product");

                    b.Navigation("ProductAttributeVarchar");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("DreamyShop.Domain.PromotionCategory", b =>
                {
                    b.HasOne("DreamyShop.Domain.Promotion", "Promotion")
                        .WithMany("PromotionCategories")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DreamyShop.Domain.PromotionManufacturer", b =>
                {
                    b.HasOne("DreamyShop.Domain.Promotion", "Promotion")
                        .WithMany("PromotionManufacturers")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DreamyShop.Domain.PromotionProduct", b =>
                {
                    b.HasOne("DreamyShop.Domain.Promotion", "Promotion")
                        .WithMany("PromotionProducts")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DreamyShop.Domain.Role", b =>
                {
                    b.HasOne("DreamyShop.Domain.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DreamyShop.Domain.Attribute", b =>
                {
                    b.Navigation("ProductAttributeDateTimes");

                    b.Navigation("ProductAttributeDecimals");

                    b.Navigation("ProductAttributeInts");

                    b.Navigation("ProductAttributeTexts");

                    b.Navigation("ProductAttributeVarchars");

                    b.Navigation("ProductAttributes");

                    b.Navigation("ProductVariantValueDateTimes");

                    b.Navigation("ProductVariantValueDecimals");

                    b.Navigation("ProductVariantValueInts");

                    b.Navigation("ProductVariantValueTexts");

                    b.Navigation("ProductVariantValueVarchars");
                });

            modelBuilder.Entity("DreamyShop.Domain.Inventory", b =>
                {
                    b.Navigation("InventoryTickets");
                });

            modelBuilder.Entity("DreamyShop.Domain.InventoryTicket", b =>
                {
                    b.Navigation("InventoryTicketItems");
                });

            modelBuilder.Entity("DreamyShop.Domain.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DreamyShop.Domain.Product", b =>
                {
                    b.Navigation("ProductAttributeDateTimes");

                    b.Navigation("ProductAttributeDecimals");

                    b.Navigation("ProductAttributeInts");

                    b.Navigation("ProductAttributeTexts");

                    b.Navigation("ProductAttributeVarchars");

                    b.Navigation("ProductAttributes");

                    b.Navigation("ProductReviews");

                    b.Navigation("ProductTags");

                    b.Navigation("ProductVariantValueDateTimes");

                    b.Navigation("ProductVariantValueDecimals");

                    b.Navigation("ProductVariantValueInts");

                    b.Navigation("ProductVariantValueTexts");

                    b.Navigation("ProductVariantValueVarchars");

                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeDateTime", b =>
                {
                    b.Navigation("ProductVariantValueDateTimes");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeDecimal", b =>
                {
                    b.Navigation("ProductVariantValueDecimals");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeInt", b =>
                {
                    b.Navigation("ProductVariantValueInts");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeText", b =>
                {
                    b.Navigation("ProductVariantValueTexts");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductAttributeVarchar", b =>
                {
                    b.Navigation("ProductVariantValueVarchars");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DreamyShop.Domain.ProductVariant", b =>
                {
                    b.Navigation("ProductVariantValueDateTimes");

                    b.Navigation("ProductVariantValueDecimals");

                    b.Navigation("ProductVariantValueInts");

                    b.Navigation("ProductVariantValueTexts");

                    b.Navigation("ProductVariantValueVarchars");
                });

            modelBuilder.Entity("DreamyShop.Domain.Promotion", b =>
                {
                    b.Navigation("PromotionCategories");

                    b.Navigation("PromotionManufacturers");

                    b.Navigation("PromotionProducts");
                });

            modelBuilder.Entity("DreamyShop.Domain.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("DreamyShop.Domain.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
